# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ master ]

jobs:
  validate_gradlew:
    name: Validate Gradlew integrity
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Validate gradlew
        uses: actions/checkout@v2
    
  build:
    name: Build and Test

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Cache .gradle
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Run Build
      run: ./gradlew build -x test
    - name: Run Tests
      id: test
      run: ./gradlew test
      continue-on-error: true
    - name: Junit Report to Annotations
      uses: meisterplan/junit-report-annotations-action@master
      with:
        projectPath: .
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        maxFailures: 100
        jobName: Build and Test
    - name: Fail if tests failed
      if: ${{ steps.test.outcome == 'failure' }}
      uses: cutenode/action-always-fail@v1.0.0
